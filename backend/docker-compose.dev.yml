version: "3.8"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    #command: daphne -b 0.0.0.0 -p 8000 naklario.asgi:application
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; ./manage.py runserver 0.0.0.0:8000'
    working_dir: /code/naklar-io
    #ports:
    #  - 127.0.0.1:8000:8000
    volumes:
      - type: bind
        source: ./naklar-io
        target: /code/naklar-io
      - type: bind
        source: ./media
        target: /opt/media
      - type: volume
        source: static
        target: /opt/static
    restart: always
    depends_on:
      - db
      - redis

  #smtpd:
  #  image: python:3.7
  #  command: python3 -u -m smtpd -n -c DebuggingServer 0.0.0.0:1025

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.dev
    working_dir: /code/naklar-io
    command: python -m celery -A naklario worker -l info
    volumes:
      - type: bind
        source: ./naklar-io
        target: /code/naklar-io
    depends_on:
      - rabbitmq
      - web

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile.dev
    working_dir: /code/naklar-io
    command: python -m celery -A naklario beat -l info -S django
    volumes:
      - type: bind
        source: ./naklar-io
        target: /code/naklar-io
    depends_on:
      - rabbitmq
      - web

  rabbitmq:
    image: rabbitmq

  nginx:
    image: nginx:stable
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - type: bind
        source: ./media
        target: /opt/media
      - type: volume
        source: static
        target: /opt/static
        volume:
          nocopy: true
    ports:
      - 8000:80
    depends_on: 
      - web
      
  redis:
    image: redis:6

  db:
     image: postgres
     environment:
       POSTGRES_USER: docker
       POSTGRES_PASSWORD: docker

     volumes:
       - type: volume
         source: database
         target: /var/lib/postgresql/data

volumes:
  static:
  database:

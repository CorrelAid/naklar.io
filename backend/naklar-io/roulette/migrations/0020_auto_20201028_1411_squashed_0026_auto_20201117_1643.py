# Generated by Django 3.1.3 on 2020-12-09 15:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('roulette', '0020_auto_20201028_1411'), ('roulette', '0021_auto_20201028_1414'), ('roulette', '0022_match_successful'), ('roulette', '0023_auto_20201029_1323'), ('roulette', '0024_auto_20201103_1736'), ('roulette', '0025_auto_20201117_1640'), ('roulette', '0026_auto_20201117_1643')]

    dependencies = [
        ('roulette', '0019_auto_20200910_1259_squashed_0020_auto_20200910_1505'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='match',
            name='fail_reason',
            field=models.CharField(choices=[('TR', 'Tutor reject'), ('TT', 'Tutor timeout'), ('SR', 'Student reject'), ('ST', 'Student timeout'), ('BT', 'Both timed out'), ('OR', 'Other reason')], default='OR', max_length=2),
        ),
        migrations.AddField(
            model_name='match',
            name='failed',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='match',
            name='student_request',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='roulette.studentrequest'),
        ),
        migrations.AlterField(
            model_name='match',
            name='tutor_request',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='roulette.tutorrequest'),
        ),
        migrations.AddConstraint(
            model_name='match',
            constraint=models.UniqueConstraint(condition=models.Q(failed=False), fields=('student_request', 'tutor_request'), name='unique_active_match_per_request'),
        ),
        migrations.AlterField(
            model_name='match',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_match', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='match',
            name='tutor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tutor_match', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='match',
            name='successful',
            field=models.BooleanField(default=False),
        ),
        migrations.RemoveConstraint(
            model_name='match',
            name='unique_active_match_per_request',
        ),
        migrations.AddConstraint(
            model_name='match',
            constraint=models.UniqueConstraint(condition=models.Q(('failed', False), ('successful', False)), fields=('student_request', 'tutor_request'), name='unique_active_match_per_request'),
        ),
        migrations.AlterField(
            model_name='match',
            name='fail_reason',
            field=models.CharField(choices=[('TR', 'Tutor reject'), ('TT', 'Tutor timeout'), ('TD', 'Tutor disconnect'), ('SR', 'Student reject'), ('ST', 'Student timeout'), ('SD', 'Student disconnect'), ('BT', 'Both timed out'), ('OR', 'Other reason')], default='OR', max_length=2),
        ),
        migrations.RemoveConstraint(
            model_name='match',
            name='unique_active_match_per_request',
        ),
        migrations.AddConstraint(
            model_name='match',
            constraint=models.UniqueConstraint(condition=models.Q(('failed', False), ('successful', False)), fields=('student_request',), name='unique_active_match_per_tutor'),
        ),
        migrations.AddConstraint(
            model_name='match',
            constraint=models.UniqueConstraint(condition=models.Q(('failed', False), ('successful', False)), fields=('tutor_request',), name='unique_active_match_per_student'),
        ),
        migrations.RemoveConstraint(
            model_name='match',
            name='unique_active_match_per_tutor',
        ),
        migrations.RemoveConstraint(
            model_name='match',
            name='unique_active_match_per_student',
        ),
        migrations.AddConstraint(
            model_name='match',
            constraint=models.UniqueConstraint(condition=models.Q(('failed', False), ('successful', False)), fields=('student_request',), name='unique_active_match_per_student'),
        ),
        migrations.AddConstraint(
            model_name='match',
            constraint=models.UniqueConstraint(condition=models.Q(('failed', False), ('successful', False)), fields=('tutor_request',), name='unique_active_match_per_tutor'),
        ),
    ]
